WebP is a free jpeg replacement from Google. https://developers.google.com/speed/webp/

V 3.0:	Switch to 320*16 blocks for sending waterfall streams.
V 2.0:	Increased block size to 64x64.
V 1.0:	Compressing independent blocks limits the damage from dropped packets;

Disadvantages:
	Extra processing needed to compress;
		(May take several tries to get required image size)
	Extra processing needed to decompress and convert back to jpeg;
		( Chromium can display webp images, so a simple html viewer is possible )
	Image size needs to be small because single errors cause total failure;
	Fixed block size wastes bandwidth on "empty" blocks.

Strategy:
	Keep it simple;
	Split large image into small WebP sub-images (max 240 bytes);
	Use fixed 320x16 pixel images to reduce packet overhead;
	Send each sub-image as a 256-byte SSDV packet;
	Re-assemble image and convert (back) to jpeg.

Command line tools:

	apt-get install webp libwebp libwebp-dev

	cwebp image.jpg -segments 3 -size 230 -pass 5 -crop 0 0 320 16 -o subimage.webp
	ssdv -i 0 -p 0 -c <name> subimage.webp subimage.ssdv
	cat subimage.ssdv >/dev/ttyAMA0

	ssdv -d subimage.ssdv newsubimage.webp
	dwebp -ppm newsubimage.webp -o newsubimage.ppm

	Reassemble with ImageMagick. (webp support in recent versions)

Detais:
	A 320x16 pixel block size was chosen as the widest size that can reasonably fit in 210 bytes.
	With 20 16x16 macroblocks in 210 bytes it is counterproductive to use more than one "segment" (groups of macroblocks with different levels of detail).

